################# D. Lomidze & A. Cimmino INFN NAPOLI ############$

process TEST = {

include "EventFilter/RPCRawToDigi/data/RPCFrontierCabling.cfi"

source = PoolSource {
	untracked vstring fileNames =   
	 {
'/store/data/Commissioning08/Cosmics/RAW/v1/000/067/818/002ABA60-CDA4-DD11-9D53-001D09F248FD.root'

     	}
        # untracked string moduleLogName= "RPCDigiDQM"
	untracked string moduleLogName= "source"
	}
untracked PSet maxEvents = {untracked int32 input = 2}

service = MessageLogger {
	untracked vstring destinations = {"RpcMonitoring.log"}
       	PSet RpcUnpacker.log     = {untracked bool noLineBreaks = true   }
        PSet detailedInfo.txt = {untracked int32  lineLength = 132    }        
	}

 #################    Raw To Digi:   #########################
 include "EventFilter/RPCRawToDigi/data/rpcUnpacker.cfi"

 #################    Data Quality Monitoring:   #########################
include "DQM/RPCMonitorDigi/data/RPCDigiMonitoring.cfi"
	replace rpcdigidqm.DigiEventsInterval = 100


	# File will be saved by the DQMFileSaver---> leave this to false
	replace rpcdigidqm.DigiDQMSaveRootFile =false
	replace rpcdigidqm.RootFileNameDigi="/tmp/cimmino/gren129_3_out.root"

	replace rpcdigidqm.dqmshifter =true   	    	
	replace rpcdigidqm.dqmexpert =true		
	replace rpcdigidqm.dqmsuperexpert =true    	

include "DQMServices/Core/data/DQM.cfg"
	replace DQM.collectorHost = "myhost"
	replace DQM.collectorPort = 9090
	replace DQM.debug = false

service = ModuleWebRegistry {}
service = LockService {untracked vstring labels = {"source"} }	

#################   For RPCRecHits   ###################
include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"
include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
include "Geometry/RPCGeometry/data/rpcGeometry.cfi" 

#The module for 1D RPC RecHit building
include "RecoLocalMuon/RPCRecHit/data/rpcRecHits.cfi"
replace rpcRecHits.rpcDigiLabel = "rpcunpacker"
#################   Output module  #####################
module out = PoolOutputModule {
       untracked string fileName ="RPCDQM.root"
}
#################   QTest module  #####################
# run the quality tests as defined in QualityTests.xml    
module qTesterRPC = QualityTester {
	untracked int32 prescaleFactor = 1
        untracked bool getQualityTestsFromFile = true
	untracked FileInPath qtList = "DQM/RPCMonitorClient/test/RPCQualityTests.xml"
}

module rpcDeadChannels = RPCDeadChannelTest {}

#################   RPCError modules  #####################
# run the quality tests as defined in QualityTests.xml    
module sameBxRPC = RPCMon_SS_Dbx_Global {

}

#################  DQMFileSaver module ##################
module dqmSaverRPC = DQMFileSaver{
#if you do not want to save the file, put this to false
untracked bool saveAtRunEnd = true

# if ==Offline workflow may not be ="" 
untracked string convention = "Online"
untracked string dirName = "."

#the fileName MUST be the subsystem name
untracked string fileName = "RPC"
}
########## DQMEventInfo module ####################
module dqmEventInfoRPC = DQMEventInfo{

untracked string eventInfoFolder = "EventInfo"
untracked  string subSystemFolder ="RPC"

#given in minutes ---0.5 default ---0.15 minimum
untracked double eventRateWindow = 0.5
}

include "DQM/RPCMonitorClient/data/RPCEventSummary.cfi"
replace rpcEventSummary.EventInfoPath = "RPC/EventInfo"
replace rpcEventSummary.RPCPrefixDir = "RPC/RecHits"
replace rpcEventSummary.PrescaleFactor = 1


################# FED Integrity ################

module rpcfedIntegrity = RPCFEDIntegrity{

}


#################   Path   #########################

sequence rpcDigi = {rpcunpacker,rpcRecHits,rpcdigidqm}
#sequence rpcDigi = {rpcRecHits,rpcdigidqm}

#sequence rpcClient ={rpcfedIntegrityqTesterRPC, rpcqualitytests,dqmEventInfoRPC,rpcEventSummary,dqmSaverRPC}
sequence rpcClient ={qTesterRPC,rpcfedIntegrity,dqmEventInfoRPC,rpcEventSummary,dqmSaverRPC}
path p = {rpcDigi ,rpcClient}
#path p = {rpcunpacker}
#path p = {l1GtUnpack,rpcTriggerFilter}
}
